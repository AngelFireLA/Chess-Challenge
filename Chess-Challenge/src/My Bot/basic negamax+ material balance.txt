public class MyBot : IChessBot
{
    // Values for every piece type
    int[] pieceValues = new int[] {0, 1, 3, 3, 5, 9, 0};	// None, Pawn, Knight, Bishop, Rook, Queen, King

    public Move Think(Board board, Timer timer)
    {
        return Negamax(board, 4, board.IsWhiteToMove);
    }

	Move Negamax(Board board, int depth, bool isWhite) {
	    Move[] moves = board.GetLegalMoves();
	    Move bestMove = moves[0];
	    int bestValue = int.MinValue;

	    for (int i = 0; i < moves.Length; i++)
	    {
	        board.MakeMove(moves[i]);
	        int boardValue = -Negamax(board, depth - 1, !isWhite);

	        if (boardValue > bestValue)
	        {
	            bestValue = boardValue;
             if (depth == 4){
                    bestMove = moves[i];}
            }
	        }
	        board.UndoMove(moves[i]);
	    }
	    return bestMove;
	}

	int MaterialScore(Board board, bool isWhite)
    {
        int score = 0;

        // Add the value of each piece to the score
        var pieceLists = board.GetAllPieceLists();
        foreach (var pieceList in pieceLists)
        {
            for (int i = 0; i < pieceList.Count; i++)
            {
                var piece = pieceList.GetPiece(i);
                score += piece.IsWhite == isWhite ? pieceValues[(int)piece.PieceType] : -pieceValues[(int)piece.PieceType];
            }
        }

        return score;
    }
}